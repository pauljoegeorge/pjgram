version: 2.1
orbs:
  ruby: circleci/ruby@0.2.2
  node: circleci/node@2.0.3

jobs:
  build:
    working_directory: ~/circleci-pjgram
    docker:
      - image: circleci/ruby:2.6.3-stretch-node-browsers
        environment:
          DB_NAME: pjgram_test
          DB_USER: root
          DB_PASS: password
          DB_HOST: 127.0.0.1
          JETS_ENV: test
          BUNDLE_PATH: /home/circleci/.gem/ruby/2.5.8
      - image: circleci/mysql:5.6.41
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: pjgram_test
          MYSQL_HOST: 127.0.0.1
          MYSQL_ROOT_HOST: "%"
          MYSQL_USER: root

    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run:
          name: Installing bundler 2.1.4
          command: |
            sudo gem update --system
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler:2.1.4

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - pjgram-bundle-v2-{{ checksum "Gemfile.lock" }}
            - pjgram-bundle-v2-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: pjgram-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - pjgram-yarn-{{ checksum "yarn.lock" }}
            - pjgram-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: pjgram-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: connect to mysql
          command: |
            dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: db create
          command: |
            RACK_ENV=test bundle exec rake db:create
            RACK_ENV=test bundle exec rake db:migrate

