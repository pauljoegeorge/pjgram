version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2 

jobs:
  build:
    working_directory: ~/circleci-pjgram
    docker:
      - image: circleci/ruby:2.6.3-stretch-node
        environment: # environment variables for primary container
          BUNDLER_VERSION: 2.0.2
          DB_HOST: 127.0.0.1
          DB_USERNAME: 'root'
          DB_PASSWORD: 'password'
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_DATABASE: 'pjgram_test'
          MYSQL_USER: 'root'
          MYSQL_PASSWORD: 'password'
          MYSQL_PORT: 3306
          MYSQL_HOST: 127.0.0.1
#          MYSQL_ROOT_HOST: "%"
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI; Import dummy data; run an example query
          command: |
            sudo apt-get install default-mysql-client
      - run:
          name: Installing bundler 2.0.2
          command: |
            sudo gem update --system
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler:2.0.2

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - pjgram-bundle-v2-{{ checksum "Gemfile.lock" }}
            - pjgram-bundle-v2-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: pjgram-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - pjgram-yarn-{{ checksum "yarn.lock" }}
            - pjgram-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: pjgram-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: bundle exec
          command: |
            dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
            bundle exec rake db:create
            bundle exec rake db:schema:load --trace

